MOUNT="n"
PIDGIN="n"
CHROME="n"
AUDACI="n"

while getopts :yYpPcCmMuUaAhxX opt; do
    case $opt in
        [mM])
            echo "Mount prompt assumed \"yes\""
            MOUNT="y"
            ;;
        [pP])
            echo "Starting Pidgin"
            PIDGIN="y"
            ;;
        [cC])
            echo "Starting Chrome"
            CHROME="y"
            ;;
        [uU])
            echo "Starting Audacious"
            AUDACI="y"
            ;;
        [aA])
            echo "Starting chrome, audacious, and pidgin."
            MOUNT="y"
            PIDGIN="y"
            CHROME="y"
            AUDACI="y"
            ;;
        [xX])
            echo "Setting xbacklight =70"
            xbacklight =70
            ;;
        h)
            echo "Prompts for arandr script input.  Will also optionally boot programs."
            echo "Run with options:"
            echo "[m|mount Windows partition]"
            echo "[c|Start Chrome]"
            echo "[p|Start Pidgin]"
            echo "[u|Start Audacious]"
            echo "[a| equal to -mcpu]"
            exit 3
            ;;
        \?)
            echo "Invalid argument $OPTARG."
            exit 1
            ;;
        *)
            echo "Unexpected return value from getopts"
            exit 2
            ;;
        :)
            echo "Option -$OPTARG requires argument"
            ;;
    esac
done

# Laptop specific:
if [ $MOUNT != "y" ] ; then
    printf "Mount Windows partition? (y/n) >> "
    read MOUNT
fi

if [ $MOUNT == "y" ]; then
  mount_win
fi
# end Laptop specific

# Laptop specific:
echo "Load monitor preset?  Options available:"
ls ~/.screenlayout
printf "(Enter preset filename, or press ENTER) >> "
read MOUNT
if [ -f ~/.screenlayout/$MOUNT ]; then
  /home/maiq/.screenlayout/$MOUNT
fi
# end Laptop specific

if pgrep pidgin &> /dev/null ; then
  echo "pidgin already running."
elif [ $PIDGIN == "y" ] ; then
  echo "Starting pidgin..."
  pidgin &> /dev/null &
fi

if pgrep chrome &> /dev/null ; then
  echo "chrome already running."
elif [ $CHROME == "y" ] ; then
  echo "Starting chrome..."
  google-chrome &> /dev/null &
fi

if pgrep audacious &> /dev/null ; then
  echo "audacious already running."
elif [ $AUDACI == "y" ] ; then
  echo "Starting audacious..."
  audacious &> /dev/null &
fi
