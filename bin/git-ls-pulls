if [ $(git config ls.default-remote) ] ; then
    defaultRemoteHost=$(git config ls.default-remote)
else
    defaultRemoteHost=origin
fi

usage () {
    echo "Usage:"
    echo "git ls-pulls [remote=${defaultRemoteHost}]"
    echo "Lists a table of open pull requests on GitHub for the given repository, sorted by author username"
    echo "Will use 'git config curl.token' to make requests if it is set."
    echo "Not using an API token risks having your requests rejected."
    echo "Default remote may be configured with 'git config ls.default-remote"
}

hostAndRepo=$(git remote show ${1:-${defaultRemoteHost}}  | grep "Fetch URL:" | grep -oE "[^/:]*/[^/]+\.git" | sed "s/\(.*\)\.git/\1/")
if [ $(git config curl.token) ] ; then
    curlToken="-u $(git config curl.token)"
else
    curlToken=""
fi

makeHeader () {
    echo author pr last-updated url ;
    echo "------ -- ------------ ---" ;
}

getPulls () {
    curl ${curlToken} "https://api.github.com/repos/${hostAndRepo}/pulls" 2> /dev/null
}

parsePulls () {
    jq '.[] | "\(.user.login) #\(.number) \(.updated_at) \(.html_url)"' | sed 's/"//g'
}

( makeHeader ; ( getPulls | parsePulls | sort ) ) | column -t

# For preference, a .gitconfig one-liner
# ls-pulls = "!f() { { echo author pr last-updated url ; echo \"------ -- ------------ ---\" ; curl $(git curl-token) \"https://api.github.com/repos/apache/geode/pulls\" 2> /dev/null| jq '.[] | \"\\(.user.login) #\\(.number) \\(.updated_at) \\(.html_url)\"' | sed 's/\"//g' | sort ;} | column -t ;} ; f"
