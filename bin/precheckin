usage () {
    echo "Usage: $0 [-c] [-f] <username> <tag>"
    echo "Forks current branch to ''<branch name>-<tag>'"
    echo "Clones this branch for precheckin."
    echo "Use -c for closed-side precheckins"
    echo "Use -d to dry run"
    echo "Requires GEMFIRE_DEPLOYMENTS_ROOT to be defined (currently: '${GEMFIRE_DEPLOYMENTS_ROOT}')"
    echo "Expects the remote repo 'fork' to exist and for its url to be SSH (not HTTPS)."
}

branch_flag="-g"
fork="fork"
dry=false

while getopts "cd" opt; do
    case $opt in
        c)
            branch_flag="-c"
            ;;
        d)
            dry=true
            ;;
    esac
done
shift $((OPTIND-1))

if [ "${GEMFIRE_DEPLOYMENTS_ROOT}" == "" ] ; then
    echo "Cannot run $0 without GEMFIRE_DEPLOYMENTS_ROOT defined."
    exit 2
fi

if [ $# -lt 2 -o $# -gt 3 ] ; then
    usage
    exit 1
fi

user=$1
tag=$2

echo "User: ${user}; tag: ${tag}"

if ! git rev-parse &> /dev/null ; then
    echo "Not currently in a git-contolled directory."
    exit 1
fi

if ! git diff-index --quiet HEAD &> /dev/null ; then
    echo "You have uncommited / unstashed changes.  Commit or stash."
    exit 1
fi

current_branch=$(git rev-parse --abbrev-ref HEAD)
target_branch="${current_branch}-${tag}"
remote_url=$(git remote get-url ${fork})


if git rev-parse --verify ${target_branch} &> /dev/null ; then
    echo "The branch '${target_branch}' already exists."
    echo "Aggressive blow this branch away and continue?"
    echo "  'git branch -D ${target_branch}' ?"
    printf "(y/n) >> "
    read yn

    if [ ${yn} == "y" ] ; then
        git branch -D ${target_branch}
    else
        echo "Backing out."
    fi
fi

echo "Branching and pushing ${current_branch} to ${target_branch}"

set -e
git branch ${target_branch}
git push -f ${fork} ${target_branch}

echo "Beginning precheckin."
DEPLOY="${GEMFIRE_DEPLOYMENTS_ROOT}/precheckin/deploy_developer_pipeline.sh"
COMMAND="${DEPLOY} -e ${user}@pivotal.io ${branch_flag} ${target_branch} -r ${remote_url} -t ${user}-${target_branch}"
echo "Launching precheckin: ${COMMAND}"
if [ "${dry}" == "false" ] ; then
    $COMMAND
fi
